@model EcWebApp.Models.AtendimentoInfo

@{
    ViewBag.Title = "Atendimento";
}

<div class="row">
    <!-- left column -->
    <div class="col-md-7">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Dados do Cliente</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Cliente.NomeCliente, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Cliente.NomeCliente, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cliente.Telefone01, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Cliente.Telefone01, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cliente.Telefone02, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Cliente.Telefone02, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Cliente.EmailCliente, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Cliente.EmailCliente, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cliente.ValorEstimadoProjeto, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <div class="input-group-addon">
                                    <b>R$</b>
                                </div>
                                @Html.EditorFor(model => model.Cliente.ValorEstimadoProjeto, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("Vendedor", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Cliente.Vendedor.NomeUsuario, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div><!--/.col -->
                </div><!--/.row -->
            </div><!-- /.box-body -->
        </div><!-- /.box -->

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.IdCliente)
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">Dados do Contato</h3>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Interesse, htmlAttributes: new { @class = "control-label" })
                                @Html.EnumDropDownListFor(model => model.Interesse, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Interesse, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IdStatus, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("IdStatus", null, "Selecione..", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DataProximoContato, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.DataProximoContato, new { htmlAttributes = new { @class = "form-control", @placeholder = "dd/mm/aaaa" } })
                                @Html.ValidationMessageFor(model => model.DataProximoContato, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StatusPlanta, htmlAttributes: new { @class = "control-label" })
                                @Html.EnumDropDownListFor(model => model.StatusPlanta, "Selecione..", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StatusPlanta, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DataApresentacao, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.DataApresentacao, new { htmlAttributes = new { @class = "form-control", @placeholder = "dd/mm/aaaa" } })
                                @Html.ValidationMessageFor(model => model.DataApresentacao, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DataMedicao, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.DataMedicao, new { htmlAttributes = new { @class = "form-control", @placeholder = "dd/mm/aaaa" } })
                                @Html.ValidationMessageFor(model => model.DataMedicao, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Comentario, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Comentario, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Salvar</button>
                    @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
                </div>
            </div><!-- /.box -->
        }
    </div><!--/.col (left) -->
    <!-- left column -->
    <div class="col-md-5">
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">Histórico</h3>
            </div><!-- /.box-header -->
            <div class="box-body">
                @Html.Action("ListaHistorico", new { idCliente = Model.IdCliente })
            </div><!-- /.box-body -->
        </div><!-- /.box-box -->
    </div><!--/.col (right) -->
</div><!--/.row -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- page script -->
    <script>
        $(function () {
            $("#DataProximoContato").datetimepicker({
                locale: 'pt-BR',
                format: 'L'
            });

            $("#DataApresentacao").datetimepicker({
                locale: 'pt-BR',
                format: 'L'
            });

            $("#DataMedicao").datetimepicker({
                locale: 'pt-BR',
                format: 'L'
            });
        });
    </script>
}
