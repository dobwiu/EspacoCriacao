@model EcWebApp.Models.UsuarioInfo

@{
    ViewBag.Title = "Usuários";
    ViewBag.SubTitle = "Novo Usuário";
}

@section header {
    <link rel="stylesheet" href="~/Content/iCheck/square/blue.css" />
}

<!-- form start -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.EmailUsuario)

    <div class="row">
        <!-- left column -->
        <div class="col-md-8">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Dados do Usuário</h3>
                </div><!-- /.box-header -->

                <div class="box-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NomeUsuario, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.NomeUsuario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NomeUsuario, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LoginUsuario, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.LoginUsuario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LoginUsuario, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SenhaUsuario, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.SenhaUsuario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SenhaUsuario, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SenhaConfirmada, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.SenhaConfirmada, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SenhaConfirmada, "", new { @class = "text-danger" })
                    </div>

                    <div class="checkbox icheck">
                        <label>
                            @Html.EditorFor(model => model.Ativo, new { htmlAttributes = new { @class = "square" } })
                            Ativo
                        </label>
                    </div>

                    <div class="form-group">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>

                </div><!-- /.box-body -->
                <div class="box-footer">
                    <input type="submit" value="Salvar" class="btn btn-primary" />
                    @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
                </div><!-- /.box-footer -->
            </div><!-- /.box -->
        </div><!--/.col (left) -->
        <!-- right column -->
        <div class="col-md-4">
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Permissões</h3>
                </div><!-- /.box-header -->
                <div class="box-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Permissoes.Vendas, htmlAttributes: new { @class = "control-label" })
                        @Html.EnumDropDownListFor(model => model.Permissoes.Vendas, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Permissoes.Vendas, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Permissoes.Relatorios, htmlAttributes: new { @class = "control-label" })
                        @Html.EnumDropDownListFor(model => model.Permissoes.Relatorios, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Permissoes.Relatorios, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Permissoes.Financeiro, htmlAttributes: new { @class = "control-label" })
                        @Html.EnumDropDownListFor(model => model.Permissoes.Financeiro, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Permissoes.Financeiro, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Permissoes.Administrativo, htmlAttributes: new { @class = "control-label" })
                        @Html.EnumDropDownListFor(model => model.Permissoes.Administrativo, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Permissoes.Administrativo, "", new { @class = "text-danger" })
                    </div>
                </div><!-- /.box-body -->
            </div><!-- /.box -->
        </div><!--/.col (right) -->
    </div><!-- /.row -->
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- page script -->
    <script>
        $(function () {
            $('input[type="checkbox"].square').iCheck({ checkboxClass: 'icheckbox_square-blue' });

            var msg = "@ViewBag.MsgErro";
            if (msg != "OK" && msg != "") {
                bootbox.alert(msg);
            }
        });
    </script>
}